## BEWARE WITH THE SEMANTICS OF UNION IN GReMLIN => IT BRANCHES AND COPIES THE TRAVERSER

## INITIAL ATTEMPT

g.V().union(	
	union(
		match(			
			__.as('v1').has('labelV-idx','Concept:Protein:Resource').as('prot').both('is_a','ac_by').has('labelV-idx', 'Concept:Enzyme:Resource').as('enz'), 
			__.as('v2').has('labelV-idx', 'Concept:Resource:Transport').as('trn').out('part_of').has('labelV-idx','Concept:Path:Resource').as('pwy'), 
			__.as('enz').out('ac_by','in_by').has('labelV-idx', 'Comp:Concept:Resource').out('cs_by','pd_by').as('trn')
			).select('pwy','prot','type').by('prefName').by('prefName').by(constant('enz')).groupCount().by('pwy').limit(100)
		
	,
		match(			
		__.as('v1').has('labelV-idx','Concept:Protein:Resource').as('prot').both('is_a','ac_by').has('labelV-idx', 'Concept:Enzyme:Resource').as('enz'), 
		__.as('v2').has('labelV-idx', 'Concept:Resource:Transport').as('trn').out('part_of').has('labelV-idx','Concept:Path:Resource').as('pwy'), 
		__.as('trn').out('ca_by').as('enz')
		).select('pwy','prot','type').by('prefName').by('prefName').by(constant('enz')).groupCount().by('pwy').limit(100)
	
	), 
	
	has('labelV-idx','Concept:Protein:Resource').as('prot').
	out('cs_by','pd_by').
	has('labelV-idx','Concept:Reaction:Resource').
	out('part_of').
	has('labelV-idx','Concept:Path:Resource').as('pwy').	select('pwy','prot','type').by('prefName').by('prefName').by(constant('react')).groupCount().by('pwy').limit(100)

)	
	
## NEW ATTEMPT 


g.V().has('labelV-idx','Concept:Path:Resource').as('pwy').limit(200).
	union(
		inE().has('labelE-idx', 'part_of').outV().as('react').
		map(group().
			by('prefName').
			by(local(
				select('react').
					inE().or(has('labelE-idx','cs_by'), has('labelE-idx','pd_by')).outV().
						has('labelV-idx','Concept:Protein:Resource').as('prot').dedup().count()))).unfold().as('cnt').
			filter(select('cnt').by(values).is(gt(0))).
			limit(100).
			project('p','c','type').
				by(select('pwy').by('prefName')).
				by(select('cnt').by(values)).
				by(constant('enz')), 
		map(group().
			by('prefName').
			by(local(
				inE().has('labelE-idx', 'part_of').outV().
				has('labelV-idx', 'Concept:Resource:Transport').
				union(outE().has('labelE-idx','ca_by').inV().
					has('labelV-idx','Concept:Enzyme:Resource'), 
					inE().or(has('labelE-idx','cs_by'), has('labelE-idx', 'pd_by')).outV().
					has('labelV-idx', 'Comp:Concept:Resource').
					inE().or(has('labelE-idx', 'ac_by'), has('labelE-idx', 'in_by')).outV().
					has('labelV-idx','Concept:Enzyme:Resource')).
				both('is_a', 'ac_by').
				has('labelV-idx','Concept:Protein:Resource').as('prot').count()))).unfold().as('cnt').
				filter(select('cnt').by(values).is(gt(0))).
				limit(100).
				project('p','c','type').
					by(select('pwy').by('prefName')).
					by(select('cnt').by(values)).
					by(constant('react'))
		)
		
		
		
		
		