g.V().match(
	__.as('v1').or(has('labelV-idx', 'DataSource:EvidenceType:Resource'), has('labelV-idx', 'EvidenceType:Resource')).as('ev'),
	__.as('v').has('labelV-idx', 'Concept:Protein:Resource').as('p').outE().has('labelE-idx','is_part_of')
		.where(values('evidenceValue').is(eq(select('ev').by('iri')))).as('pr').inV().has('labelV-idx', 'Concept:Protcmplx:Resource').as('cpx1'))
	.limit(100)
	.select('p', 'pr', 'ev').by('prefName').by('prefName').by('knetLabel')
	
## TIMEOUT

g.V().match(
	__.as('v1').or(has('labelV-idx', 'DataSource:EvidenceType:Resource'), has('labelV-idx', 'EvidenceType:Resource')).as('ev'),
	__.as('v').has('labelV-idx', 'Concept:Protcmplx:Resource').as('cpx1').inE().has('labelE-idx','is_part_of')
		.where(values('evidenceValue').is(eq(select('ev').by('iri')))).as('pr').otherV().has('labelV-idx', 'Concept:Protein:Resource').as('p')).
	limit(100).
	select('p', 'pr', 'ev').by('prefName').by('prefName').by('knetLabel')
	
## THIS IS THE ONE
g.withSack{[:]}{it.clone();}.
	V().or(has('labelV-idx', 'DataSource:EvidenceType:Resource'), has('labelV-idx', 'EvidenceType:Resource')).
		sack{m,v->m['ev_iri'] = v.values('iri').next(); m['ev_label'] = v.label();m}.
	V().has('labelV-idx','Concept:Protcmplx:Resource').
		sack{m,v->m['cpx1_prefName']=v.values('prefName').next();m}.
			inE().has('labelE-idx','is_part_of').
			filter(project('a','b').by('evidenceValue').by(sack().select('ev_iri')).where('a',eq('b'))).
				outV().has('labelV-idx', 'Concept:Protein:Resource').
					sack{m,v->m['p_prefName']=v.values('prefName').next();m}.
	sack().map{x->[p_prefName:x.get()['p_prefName'], cpx1_prefName:x.get()['cpx1_prefName'], ev_label:x.get()['ev_label']]}.limit(100)
	
